AWSTemplateFormatVersion: "2010-09-09"
Description: CloudFormation Templates for provisioning SageMaker Studio domain
Parameters:
  UserProfileName:
    Type: String
    Description: "user profile name "
    Default: "DefaultUser"

Resources:

  myVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsSupport: 'true'
      EnableDnsHostnames: 'true'

  myInternetGw:
    Type: AWS::EC2::InternetGateway

  IGWAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId:
        Ref: myInternetGw
      VpcId:
        Ref: myVPC

  mySubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: myVPC
      CidrBlock: 10.0.0.0/24
      AvailabilityZone: !Select
        - 0
        - Fn::GetAZs: !Ref 'AWS::Region'

  mySubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: myVPC
      CidrBlock: 10.0.1.0/24
      AvailabilityZone: !Select
        - 1
        - Fn::GetAZs: !Ref 'AWS::Region'

  RouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref myVPC

  myRoute:
    Type: AWS::EC2::Route
    DependsOn: myInternetGw
    Properties:
      RouteTableId:
        Ref: RouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: myInternetGw

  mySubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: mySubnet1
      RouteTableId:
        Ref: RouteTable

  mySubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: mySubnet2
      RouteTableId:
        Ref: RouteTable

  StudioDomain:
    Type: AWS::SageMaker::Domain
    Properties:
      AuthMode: "IAM"
      DefaultUserSettings:
        ExecutionRole: !GetAtt SageMakerExecutionRole.Arn
      DomainName: "StudioDomain"
      SubnetIds:
        - !Ref mySubnet1
        - !Ref mySubnet2
      VpcId: !Ref myVPC

  UserProfile:
    Type: AWS::SageMaker::UserProfile
    Properties:
      DomainId: !Ref StudioDomain
      UserProfileName: !Ref UserProfileName
      UserSettings:
        ExecutionRole: !GetAtt SageMakerExecutionRole.Arn

  StudioApp:
    Type: AWS::SageMaker::App
    DependsOn: UserProfile
    Properties:
      AppName: "defaultApp"
      AppType: "JupyterServer"
      DomainId: !Ref StudioDomain
      UserProfileName: !Ref UserProfileName


  SageMakerExecutionRole:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName: "AmazonSageMaker-ExecutionRole-endtoendml"
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - sagemaker.amazonaws.com
            Action:
              - "sts:AssumeRole"
      Path: "/service-role/"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonSageMakerFullAccess
        - arn:aws:iam::aws:policy/AmazonS3FullAccess
      Policies:
        - PolicyName: GlueFullAccess-endtoendml
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - glue:*
                Resource: "*"
        - PolicyName: AthenaFullAccess-endtoendml
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - athena:*
                Resource: "*"

  GlueServiceRole:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName: "GlueServiceRole-endtoendml"
      AssumeRolePolicyDocument:
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - "glue.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/service-role/AWSGlueServiceRole"
        - "arn:aws:iam::aws:policy/AmazonS3FullAccess"
      Path: "/service-role/"

  LambdaInvokeSageMakerEndpointRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: "LambdaInvokeSageMakerEndpointRole-endtoendml"
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /
      Policies:
        - PolicyName: LambdaInvokeSageMakerEndpointPolicy-endtoendml
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - sagemaker:InvokeEndpoint
                Resource: "*"
